// <auto-generated />
using System;
using HomeWork.api.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeWork.Api.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20220928091223_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("HomeWork.api.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attendance_id");

                    b.Property<int>("AttendanceStatusId")
                        .HasColumnType("int")
                        .HasColumnName("attendance_attendance_status_id");

                    b.Property<float>("CountTime")
                        .HasColumnType("float")
                        .HasColumnName("attendance_count_time");

                    b.Property<DateTime>("RecordTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("attendance_record_time");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("attendance_staff_id");

                    b.HasKey("Id");

                    b.HasIndex("AttendanceStatusId");

                    b.HasIndex("StaffId");

                    b.ToTable("T_Attendance", (string)null);
                });

            modelBuilder.Entity("HomeWork.api.Models.AttendanceStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("attandance_status_id");

                    b.Property<string>("EnumType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("attandance_status_type");

                    b.Property<int>("FineOrBouns")
                        .HasColumnType("int")
                        .HasColumnName("attendance_fine_or_bouns");

                    b.Property<float>("RateFineOrBouns")
                        .HasColumnType("float")
                        .HasColumnName("attendance_rate_fine_or_bouns");

                    b.HasKey("Id");

                    b.ToTable("T_AttendanceStatus", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnumType = "迟到",
                            FineOrBouns = 100,
                            RateFineOrBouns = 10f
                        },
                        new
                        {
                            Id = 2,
                            EnumType = "旷工",
                            FineOrBouns = 100,
                            RateFineOrBouns = 10f
                        },
                        new
                        {
                            Id = 3,
                            EnumType = "加班",
                            FineOrBouns = 100,
                            RateFineOrBouns = 10f
                        },
                        new
                        {
                            Id = 4,
                            EnumType = "请假",
                            FineOrBouns = 100,
                            RateFineOrBouns = 10f
                        });
                });

            modelBuilder.Entity("HomeWork.api.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int")
                        .HasColumnName("department_manager_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("department_name");

                    b.HasKey("Id");

                    b.HasIndex("ManagerId");

                    b.ToTable("T_Department", (string)null);
                });

            modelBuilder.Entity("HomeWork.api.Models.Political", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("political_id");

                    b.Property<string>("EnumType")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("political_type");

                    b.HasKey("Id");

                    b.ToTable("T_Political", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnumType = "党员"
                        },
                        new
                        {
                            Id = 2,
                            EnumType = "群众"
                        });
                });

            modelBuilder.Entity("HomeWork.api.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("post_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("post_name");

                    b.Property<int>("SaralyId")
                        .HasColumnType("int")
                        .HasColumnName("post_staff_salary_id");

                    b.HasKey("Id");

                    b.HasIndex("SaralyId");

                    b.ToTable("T_Post", (string)null);
                });

            modelBuilder.Entity("HomeWork.api.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("staff_id");

                    b.Property<DateTime>("Brith")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("staff_brith");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("staff_department_id");

                    b.Property<string>("Health")
                        .HasColumnType("longtext")
                        .HasColumnName("staff_health");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("staff_name");

                    b.Property<int>("PoliticalType")
                        .HasColumnType("int")
                        .HasColumnName("staff_political_type");

                    b.Property<int?>("PostId")
                        .HasColumnType("int")
                        .HasColumnName("staff_post_id");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PostId");

                    b.ToTable("T_Staff", (string)null);
                });

            modelBuilder.Entity("HomeWork.api.Models.StaffChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("staffchange_id");

                    b.Property<DateTime>("ChangeTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasColumnName("staffchange_change_time");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("staffchange_department_id");

                    b.Property<int>("StaffId")
                        .HasColumnType("int")
                        .HasColumnName("staffchange_staff_id");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("StaffId");

                    b.ToTable("T_StaffChange", (string)null);
                });

            modelBuilder.Entity("HomeWork.api.Models.StaffSalary", b =>
                {
                    b.Property<int>("SalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("salary_id");

                    b.Property<float>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("salary_value");

                    b.HasKey("SalaryId");

                    b.ToTable("T_StaffSalary", (string)null);
                });

            modelBuilder.Entity("HomeWork.api.Models.Attendance", b =>
                {
                    b.HasOne("HomeWork.api.Models.AttendanceStatus", null)
                        .WithMany()
                        .HasForeignKey("AttendanceStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeWork.api.Models.Staff", null)
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeWork.api.Models.Department", b =>
                {
                    b.HasOne("HomeWork.api.Models.Staff", null)
                        .WithMany()
                        .HasForeignKey("ManagerId");
                });

            modelBuilder.Entity("HomeWork.api.Models.Post", b =>
                {
                    b.HasOne("HomeWork.api.Models.StaffSalary", null)
                        .WithMany()
                        .HasForeignKey("SaralyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HomeWork.api.Models.Staff", b =>
                {
                    b.HasOne("HomeWork.api.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("HomeWork.api.Models.Post", null)
                        .WithMany()
                        .HasForeignKey("PostId");
                });

            modelBuilder.Entity("HomeWork.api.Models.StaffChange", b =>
                {
                    b.HasOne("HomeWork.api.Models.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeWork.api.Models.Staff", null)
                        .WithMany()
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
